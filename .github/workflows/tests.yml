name: Run tests

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  py_test:
    name: Tests on ${{ matrix.os }} with python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ ubuntu-latest, macOS-latest, windows-latest ]
        os: [ ubuntu-latest ]
        python-version: [ "3.8", "3.x", "pypy3.9" ]
        exclude:
          - os: macos-latest
            python-version: "pypy3.9"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: setup.py

      - name: Install dependencies
        run: |
          # Install local package with tests dependencies extras
          pip install ".[test]"

      - name: Test with pytest
        run: pytest -s --cov=symusic --cov-report=xml -n auto --durations=0 -v tests

      - name: Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: python

  cpp_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install gcovr (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install -y gcovr

      - name: Install gcovr (macOS)
        if: runner.os == 'macOS'
        run: brew install gcovr

      - name: Configure CMake with Coverage
        if: runner.os != 'Windows'
        run: cmake -S . -Bbuild -DBUILD_SYMUSIC_TEST:BOOL=ON -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE:BOOL=ON -DCMAKE_POLICY_VERSION_MINIMUM=3.5

      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        run: cmake -S . -Bbuild -DBUILD_SYMUSIC_TEST:BOOL=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_POLICY_VERSION_MINIMUM=3.5

      - name: Build
        run: cmake --build build --config Debug

      - name: Run CPP Tests
        run: |
          cd build
          ctest -C Debug --output-on-failure --verbose

      - name: Generate Coverage Report
        if: runner.os != 'Windows'
        run: |
          cd build
          gcovr --xml --output=coverage.xml -r .. --filter="../src/" --filter="../include/" --exclude="../3rdparty/" --exclude="_deps/" --gcov-ignore-errors=no_working_dir_found

      - name: Codecov
        if: runner.os != 'Windows'
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./build/coverage.xml
          flags: cpp
